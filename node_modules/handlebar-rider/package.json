{
  "author": {
    "name": "Ben Ipsen",
    "email": "email@benipsen.com"
  },
  "name": "handlebar-rider",
  "description": "Compiles/watches a directory of handlebar templates files and precompiles into single js output file",
  "version": "0.1.10",
  "repository": {
    "type": "git",
    "url": "http://github.com/cif/handlebar-rider"
  },
  "main": "./lib/handlebar-rider.js",
  "directories": {
    "lib": "./lib/"
  },
  "bin": {
    "handlebar-rider": "./bin/handlebar-rider"
  },
  "engines": {
    "node": ">= 0.4.9"
  },
  "dependencies": {
    "handlebars": ">= 1.x",
    "uglify-js": "1.1.1",
    "optimist": ">= 0.3.4"
  },
  "readme": "# handlebar-rider\n================\n\nThis is a module and command line tool that will compile/watch a handlebars template directory and pre-compile any handlebars template files then \nconcatenate them into a single javascript file.  \n\nThe directory structure you use will namespace the templates with ['directory/template'] as with JST et all\n\n\n## Install:\n\n    npm install -g handlebar-rider\n\n## Command line usage:\n\n    Command Line Usage: \n\n    Options:\n      -i, --in        Specify an input templates directory                            [default: \"./app/handlebars/\"]\n      -o, --out       Specify an output file into which templates are compiled        [default: \"./public/javascript/templates.js\"]\n      -w, --watch     Watch your handlebars files and compile when changes occur      [default: false]\n      -r, --readable  Make the output more readable by avoiding default minification  [default: false]\n      \n    \n\n## npm module usage\t\t\t\n\n\t\thbr = require('handlebar-rider')\n\t\thrb.configure({\n\t\t  in: '/path/to/your/templates/'\n\t\t  out: '/path/to/output.js',\n\t\t  minify: false\n\t\t})\n\t\thbr.compile()\n\t\thbr.watch()\n\t\t\t\t\n## Run-time usage example: \n\n    html_output = Handlebars.templates['users/view'](data)\n\n \n## Partial Support/Conventions:\n\nThere are two methods for using partials within your templates:\n \n#### 1. Global partials \n\nIf you a directory within your templates directory, aptly called \"partials\", the\nhandlebars files will be pre compile and become available in your templates as partial_name\n\n#### 2. Scoped partials\n\nIf you prefix your template file name with an underscore, you can can access it as directory_partial \n\n### Example directory structure:\n\n    templates \n      -- users\n          - _list.hb\n          - _form.hb\n          - edit.hb\n          - view.hb\n      \n      -- partials\n          - photo_uploader.hb\n\n\n### And usage: \n\n    <h1>Edit User</h1>\n    {{> users_list}}\n    {{> users_form}}\n    {{> photo_uploader}}\n \n\n",
  "_id": "handlebar-rider@0.1.10",
  "dist": {
    "shasum": "2f7a1916bb999f7a45328c05962a56087d445356"
  },
  "_from": "handlebar-rider@0.1.10"
}
